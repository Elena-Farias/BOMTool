@page "/PartNum"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using Faso.Blazor.SpinKit


<PageTitle Text="BOM Tool"
           Icon="IconName.Archive" />

<Row Padding="Padding.Is4.OnAll">
    @if (!PartNumState.Value.IsLoading && !(LocationState.Value.Currents == null))
    {
        var locations = LocationState.Value.Currents.ToList();

        <Field ColumnSize="ColumnSize.Is3">
            <FieldLabel>
                Select Location:
            </FieldLabel>
            <FieldBody>
                <Select TValue="string" @bind-SelectedValue="selectedPartNum.Location">
                    <SelectItem Value="-1">
                        Select Locacion
                    </SelectItem>
                    @foreach (var locs in locations)
                    {
                        <SelectItem Value="@locs.Code">@locs.Name</SelectItem>
                    }
                </Select>
            </FieldBody>
        </Field>

        <Field ColumnSize="ColumnSize.Is3">
            <FieldLabel>
                Enter Part Number:
            </FieldLabel>
            <MemoEdit Placeholder="Part Number..." @bind-Text="selectedPartNum.PartNum" />
        </Field>

        <Field>
            <FieldBody>
                <Button Color="Color.Primary"
                        Clicked="@(() => SeachPartNum(selectedPartNum))">
                    <Icon Name="IconName.Search" />
                    Search
                </Button>
            </FieldBody>
        </Field>

        <Field>
            <FieldBody>
                <Button Color="Color.Success"
                        Clicked="@(() => DownloadFile(selectedPartNum))">
                    <Icon Name="IconName.FileDownload" />
                    Export to Excel
                </Button>
            </FieldBody>
        </Field>

        <Field>
            <FieldBody>
                <Button Color="Color.Light"
                        Clicked="@clearfields">
                    <Icon Name="IconName.Clear" />
                    Reset PartNum
                </Button>
            </FieldBody>
        </Field>
    }

</Row>
<Row>
    <Column>
        <DataGrid TItem="PartNumbDto"
                  Data="@PartNumState.Value.Currents"
                  Sortable="true"
                  ShowPager="true"
                  PageSize="300">
            <DataGridColumn TItem="PartNumbDto" Field="@nameof(PartNumbDto.Model)" Caption="Model" Sortable="true" />
            <DataGridColumn TItem="PartNumbDto" Field="@nameof(PartNumbDto.PartNum)" Caption="Part Number" Sortable="true" />
            <DataGridColumn TItem="PartNumbDto" Field="@nameof(PartNumbDto.ItemDescription)" Caption="Description" Sortable="true" />
            <DataGridColumn TItem="PartNumbDto" Field="@nameof(PartNumbDto.UOM)" Caption="UOM" Sortable="true" />
            <DataGridColumn TItem="PartNumbDto" Field="@nameof(PartNumbDto.QTY)" Caption="QTY" Sortable="true" />
            <DataGridColumn TItem="PartNumbDto" Field="@nameof(PartNumbDto.ItemType)" Caption="Item Type" Sortable="true" />
        </DataGrid>
    </Column>
</Row>

@if (PartNumState.Value.IsLoading)
{
    <SpinKitThreeBounce /> 
 }

